{"version":3,"sources":["Components/Images/Backlog.svg","Components/Images/To-do.svg","Components/Images/Done.svg","Components/Images/in-progress.svg","Components/Images/Cancelled.svg","Components/Images/Display.svg","Components/Navbar/Navbar.js","Components/Card/Card.js","Components/Board/Board.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","DropdownOption","_ref2","label","value","onChange","children","React","createElement","className","Navbar","_ref","sortingOption","onSortingChange","groupingOption","onGroupingChange","dropdownOpen","setDropdownOpen","useState","onClick","toggleDropdown","src","Display","alt","ChevronUp","ChevronDown","Card","props","logoReference","Backlog","Todo","In progress","InProgress","Done","Cancelled","ticket","users","user","userId","find","id","getUserById","initials","name","nameParts","split","firstName","lastName","length","charAt","toUpperCase","getInitials","groupBy","style","backgroundColor","getRandomColor","color","i","Math","floor","random","status","title","MoreHorizontal","tag","Board","count","Plus","tickets","map","key","App","initialGroupingOption","localStorage","getItem","initialSortingOption","setTickets","setUsers","setGroupingOption","setSortingOption","priorityLabels","0","2","process","3","4","1","userLabels","reduce","labels","firstLetterFirstName","firstLetterLastName","randomColor","useEffect","async","data","axios","get","updatedTickets","priority","error","console","getDetails","setItem","sortByPriority","sort","a","b","sortByTitle","localeCompare","sortedTickets","sortingFunction","boards","organizeTickets","ticketStatus","forEach","push","priorityStatus","userStatus","usr-1","usr-2","usr-3","usr-4","usr-5","event","target","Object","keys","boardKey","reportWebVitals","onPerfEntry","Function","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.8b45c13a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Backlog.47973b09.svg\";","module.exports = __webpack_public_path__ + \"static/media/To-do.991aa8ff.svg\";","module.exports = __webpack_public_path__ + \"static/media/Done.ee99e204.svg\";","module.exports = __webpack_public_path__ + \"static/media/in-progress.6f7f6c8e.svg\";","module.exports = __webpack_public_path__ + \"static/media/Cancelled.15c84b14.svg\";","module.exports = __webpack_public_path__ + \"static/media/Display.b96d92a3.svg\";","import React, { useState } from 'react';\nimport './Navbar.css';\nimport { ChevronDown, ChevronUp } from 'react-feather';\nimport Display from '../Images/Display.svg';\nconst Navbar = ({sortingOption, onSortingChange, groupingOption, onGroupingChange}) => {\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n  \n  const toggleDropdown = () => {\n    setDropdownOpen(!dropdownOpen);\n  };\n\n  return (\n    <div className='nav-bar'>\n      <div className='drop-down' onClick={toggleDropdown}>\n      <img src={Display} className='icon' alt='Menu'/>\n        <p className='bold'>Display</p>\n        {dropdownOpen ? <ChevronUp className='icon' /> : <ChevronDown className='icon' />}\n      </div>\n      {dropdownOpen && (\n        <div className='dropdown-options'>\n          <DropdownOption label=\"Grouping\" value={groupingOption} onChange={onGroupingChange}>\n            <option value='status'>Status</option>\n            <option value='user'>User</option>\n            <option value='priority'>Priority</option>\n          </DropdownOption>\n          <DropdownOption label=\"Ordering\" value={sortingOption} onChange={onSortingChange}>\n            <option value='priority'>Priority</option>\n            <option value='title'>Title</option>\n          </DropdownOption>\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst DropdownOption = ({ label, value, onChange, children }) => {\n  return (\n    <div className='dd-option'>\n      <label>{label}</label>\n      <select value={value} onChange={onChange}>\n        {children}\n      </select>\n    </div>\n  );\n};\n\nexport default Navbar;\n","import React from 'react';\nimport \"./Card.css\";\nimport { MoreHorizontal } from 'react-feather';\n\nimport Backlog from '../Images/Backlog.svg';\nimport Todo from '../Images/To-do.svg';\nimport Done from '../Images/Done.svg';\nimport InProgress from '../Images/in-progress.svg';\nimport Cancelled from '../Images/Cancelled.svg';\n\nconst Card = ( props ) => {\n    \n    const logoReference = {\n      \"Backlog\": <img src={Backlog} className='logo-pic' alt=\"Backlog\" />,\n      \"Todo\": <img src={Todo} className='logo-pic' alt=\"Todo\" />,\n      \"In progress\": <img src={InProgress} className='logo-pic' alt=\"In progress\" />,\n      \"Done\": <img src={Done} className='logo-pic' alt=\"Done\" />,\n      \"Cancelled\": <img src={Cancelled} className='logo-pic' alt=\"Cancelled\" />\n  };\n\n  const { ticket, users } = props;\n\n  const getUserById = (userId) => {\n    return users.find((user) => user.id === userId);\n  };\n\n  const getInitials = (name) => {\n    const nameParts = name.split(' ');\n    const firstName = nameParts[0];\n    const lastName = nameParts.length > 1 ? nameParts[1] : '';\n    const initials = `${firstName.charAt(0)}${lastName ? lastName.charAt(0) : ''}`;\n    return initials.toUpperCase();\n  };\n\n  const getRandomColor = () => {\n    const letters='0123456789ABCDEF';\n    let color='#';\n    for (let i=0;i<6;i++) {\n      color+=letters[Math.floor(Math.random()*7)];\n    }\n    return color;\n  };\n\n  const user = getUserById(ticket.userId);\n  const initials = user ? getInitials(user.name) : '';\n\n  return (\n    <div className='card'>\n      <div className='card-top'>\n        <p className='card-title'>{props.ticket.id}</p>\n        {props.groupBy !== 'user' && (\n            <div\n            className=\"user-pic\"\n            style={{\n              backgroundColor: getRandomColor()\n            }}\n          >\n            {initials}\n          </div>\n        )}\n\n      </div>\n      <div className='card-middle'>\n        {props.groupBy !== 'status' && logoReference[props.ticket.status]}\n        <p className='card-desc bold'>\n          {props.ticket.title}\n        </p>\n      </div>\n      <div className='card-bottom'>\n        {props.groupBy !== 'priority' && (\n          <div className='component-1 pointer'>\n            <MoreHorizontal className='icon' />\n          </div>\n        )}\n        <div className='component-2 pointer'>\n          <img\n            src=\"https://cdn-icons-png.flaticon.com/128/5720/5720434.png\"\n            className='icon'\n            alt='logo'\n          />\n          <p>{props.ticket.tag[0]}</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Card","import React from 'react';\nimport \"./Board.css\";\nimport { MoreHorizontal, Plus} from 'react-feather';\n\nimport Backlog from '../Images/Backlog.svg';\nimport Todo from '../Images/To-do.svg';\nimport Done from '../Images/Done.svg';\nimport Card from '../Card/Card';\nimport InProgress from '../Images/in-progress.svg';\nimport Cancelled from '../Images/Cancelled.svg';\n\nconst Board = ( props ) => {\n\n    const logoReference = {\n        \"Backlog\": <img src={Backlog} className='logo-pic' alt=\"Backlog\" />,\n        \"Todo\": <img src={Todo} className='logo-pic' alt=\"Todo\" />,\n        \"In progress\": <img src={InProgress} className='logo-pic' alt=\"In progress\" />,\n        \"Done\": <img src={Done} className='logo-pic' alt=\"Done\" />,\n        \"Cancelled\": <img src={Cancelled} className='logo-pic' alt=\"Cancelled\" />\n    };\n\n  return (\n    <div className='board'>\n        <div className='board-top'>\n            <div className='board-top-left'>\n                {props.groupingOption === \"status\" && logoReference[props.title]}\n                <p className='board-title bold'>{props.title}</p>\n                <span className='board-count'>{props.count}</span>\n            </div>\n            <div className='board-top-right'>\n                <MoreHorizontal className='icon'/>\n                <Plus className='icon'/>\n            </div>\n        </div>\n        <div className='card-container'>\n            {props.tickets.map((ticket) => (\n                <Card key={ticket.id} ticket={ticket} groupBy={props.groupingOption} users={props.users} />\n            ))}\n        </div>\n    </div>\n  );\n};\n\nexport default Board","import React, { useEffect, useState } from \"react\";\nimport './App.css';\n\nimport Navbar from \"./Components/Navbar/Navbar\";\nimport Board from \"./Components/Board/Board\";\nimport axios from \"axios\"; \n\nfunction App() {\n  const initialGroupingOption = localStorage.getItem('groupBy') || \"status\";\n  const initialSortingOption = localStorage.getItem('sortBy') || \"priority\";\n\n  const [tickets, setTickets] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [groupingOption, setGroupingOption] = useState(initialGroupingOption);\n  const [sortingOption, setSortingOption] = useState(initialSortingOption);\n\n  const priorityLabels = {\n    0:(\n      <div className=\"user-label\">\n      <img src=\"https://cdn-icons-png.flaticon.com/128/9974/9974563.png\" className='user-pic' alt=\"No Priority\" />  No Priority\n      </div>\n    ),\n    2:(\n      <div className=\"user-label\">\n      <img src={process.env.PUBLIC_URL + \"/l.jpg\"} className='user-pic' alt=\"Low\" />  Low\n      </div>\n    ),\n    3:(\n      <div className=\"user-label\">\n      <img src={process.env.PUBLIC_URL + \"/m.jpg\"} className='user-pic' alt=\"Medium\" />  Medium\n      </div>\n    ), \n    4:(\n      <div className=\"user-label\">\n      <img src={process.env.PUBLIC_URL + \"/h.jpg\"}  className='user-pic' alt=\"High\" />  High\n      </div>\n    ),  \n    1:(\n      <div className=\"user-label\">\n      <img src=\"https://cdn-icons-png.flaticon.com/128/6324/6324052.png\" className='user-pic' alt=\"Urgent\" />  Urgent\n      </div>\n    )\n  };\n\n  const userLabels=users.reduce((labels, user) => {\n    const nameParts=user.name.split(' ');\n    const firstName=nameParts[0];\n    const lastName=nameParts.length > 1 ? nameParts[1] : '';\n    const firstLetterFirstName = firstName.charAt(0).toUpperCase();\n    const firstLetterLastName = lastName.charAt(0).toUpperCase();\n\n    const randomColor = getRandomColor();\n\n    labels[user.id] = (\n      <div className=\"user-label\">\n        <div\n          className=\"user-pic\"\n          style={{\n            backgroundColor: randomColor,\n          }}\n        >\n          {firstLetterFirstName}\n          {lastName && ` ${firstLetterLastName}`}\n        </div>\n        {user.name}\n      </div>\n    );\n    return labels;\n  }, {});\n\n  function getRandomColor() {\n    const letters='0123456789ABCDEF';\n    let color='#';\n    for (let i=0;i<6;i++) {\n      color+=letters[Math.floor(Math.random()*7)];\n    }\n    return color;\n  }\n\n  useEffect(() => {\n    getDetails();\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('groupBy', groupingOption);\n    localStorage.setItem('sortBy',sortingOption);\n  }, [groupingOption, sortingOption])\n\n  async function getDetails() {\n    try {\n      const { data } = await axios.get(\"https://api.quicksell.co/v1/internal/frontend-assignment\");\n      const updatedTickets = data.tickets.map((ticket) => {\n        if (ticket.priority === 1) {\n          ticket.priority = 2;\n        } else if (ticket.priority === 2) {\n          ticket.priority = 3;\n        } else if (ticket.priority === 3) {\n          ticket.priority = 4;\n        } else if (ticket.priority === 4) {\n          ticket.priority = 1;\n        }\n        return ticket;\n      });\n      setTickets(updatedTickets); \n      setUsers(data.users);\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  }\n\n  const organizeTickets = () => {\n    const organizedData = {};\n  \n    if (groupingOption === 'status') {\n      const ticketStatus = {\n        \"Backlog\": [],\n        \"Todo\": [],\n        \"In progress\": [],\n        \"Done\": [],\n        \"Cancelled\": []\n      };\n  \n      tickets.forEach(ticket => {\n        if (ticketStatus[ticket.status]) {\n          ticketStatus[ticket.status].push(ticket);\n        }\n      });\n  \n      return ticketStatus;\n    } else if (groupingOption === 'priority') {\n      const priorityStatus = {\n        0: [],\n        1: [],\n        2: [],\n        3: [],\n        4: []\n      };\n  \n      tickets.forEach(ticket => {\n        if (priorityStatus[ticket.priority]) {\n          priorityStatus[ticket.priority].push(ticket);\n        }\n      });\n  \n      return priorityStatus;\n    } else if (groupingOption === 'user') {\n      const userStatus = {\n        \"usr-1\": [],\n        \"usr-2\": [],\n        \"usr-3\": [],\n        \"usr-4\": [],\n        \"usr-5\": []\n      };\n  \n      tickets.forEach(ticket => {\n        if (userStatus[ticket.userId]) {\n          userStatus[ticket.userId].push(ticket);\n        }\n      });\n  \n      return userStatus;\n    } \n  \n    return organizedData;\n  };\n\n  const sortByPriority = (tickets) => {\n    return [...tickets].sort((a, b) => b.priority - a.priority);\n  };\n\n  const sortByTitle = (tickets) => {\n    return [...tickets].sort((a, b) => a.title.localeCompare(b.title));\n  };\n\n  const handleSortingChange = (event) => {\n    setSortingOption(event.target.value);\n  };\n\n  const handleGroupingChange = (event) => {\n    setGroupingOption(event.target.value);\n  };\n\n  const sortedTickets = (tickets) => {\n    const sortingFunctions = {\n      priority: sortByPriority,\n      title: sortByTitle,\n    };\n  \n    const sortingFunction = sortingFunctions[sortingOption];\n  \n    if (sortingFunction) {\n      return sortingFunction(tickets);\n    }\n  \n    return tickets;\n  };\n\n  const boards = organizeTickets();\n\n  return (\n    <div className=\"app-container\">\n      <div className=\"app-navbar\">\n        <nav>\n          <Navbar\n            sortingOption={sortingOption}\n            onSortingChange={handleSortingChange}\n            groupingOption={groupingOption}\n            onGroupingChange={handleGroupingChange}\n          />\n        </nav>\n      </div>\n      <div className=\"app-outer-container\">\n        <div className=\"app-boards\">\n        {Object.keys(boards).map(boardKey => (\n            <Board \n              key={boardKey} \n              title={groupingOption === 'priority' ? priorityLabels[boardKey] : \n              groupingOption === \"user\" ? userLabels[boardKey] : boardKey}\n              count={boards[boardKey].length}\n              tickets={sortedTickets(boards[boardKey])}\n              sortingOption={sortingOption}\n              groupingOption={groupingOption} \n              users={users}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}