{"version":3,"sources":["Components/Images/SVG - Urgent Priority colour.svg","Components/Images/No-priority.svg","Components/Images/Img - Low Priority.svg","Components/Images/Img - Medium Priority.svg","Components/Images/Img - High Priority.svg","Components/Images/Backlog.svg","Components/Images/To-do.svg","Components/Images/Done.svg","Components/Images/in-progress.svg","Components/Images/Cancelled.svg","Components/Images/Display.svg","Components/Navbar/Navbar.js","Components/Card/Card.js","Components/Board/Board.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","DropdownOption","_ref2","label","value","onChange","children","React","createElement","className","Navbar","_ref","sortingOption","onSortingChange","groupingOption","onGroupingChange","dropdownOpen","setDropdownOpen","useState","dropdownRef","useRef","handleClickOutside","event","current","contains","target","useEffect","document","addEventListener","removeEventListener","ref","onClick","toggleDropdown","prev","src","Display","alt","ChevronUp","ChevronDown","Card","props","logoReference","Backlog","Todo","In progress","InProgress","Done","Cancelled","priorityIcon","0","Nope","1","Urgent","2","Low","3","Medium","4","High","ticket","users","user","userId","find","id","getUserById","initials","name","nameParts","split","firstName","lastName","length","charAt","toUpperCase","getInitials","groupBy","style","backgroundColor","getRandomColor","color","i","Math","floor","random","status","title","priority","tag","Board","count","MoreHorizontal","Plus","tickets","map","key","App","initialGroupingOption","localStorage","getItem","initialSortingOption","setTickets","setUsers","setGroupingOption","setSortingOption","priorityLabels","userLabels","reduce","labels","firstLetterFirstName","firstLetterLastName","randomColor","async","data","axios","get","updatedTickets","error","console","getDetails","setItem","sortByPriority","sort","a","b","sortByTitle","localeCompare","sortedTickets","sortingFunction","boards","organizeTickets","ticketStatus","forEach","push","priorityStatus","userStatus","usr-1","usr-2","usr-3","usr-4","usr-5","Object","keys","boardKey","reportWebVitals","onPerfEntry","Function","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.b0a435e0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/SVG - Urgent Priority colour.4eca8404.svg\";","module.exports = __webpack_public_path__ + \"static/media/No-priority.0d2cbadc.svg\";","module.exports = __webpack_public_path__ + \"static/media/Img - Low Priority.2ad281d3.svg\";","module.exports = __webpack_public_path__ + \"static/media/Img - Medium Priority.861ebea5.svg\";","module.exports = __webpack_public_path__ + \"static/media/Img - High Priority.10cfcedf.svg\";","module.exports = __webpack_public_path__ + \"static/media/Backlog.47973b09.svg\";","module.exports = __webpack_public_path__ + \"static/media/To-do.991aa8ff.svg\";","module.exports = __webpack_public_path__ + \"static/media/Done.ee99e204.svg\";","module.exports = __webpack_public_path__ + \"static/media/in-progress.6f7f6c8e.svg\";","module.exports = __webpack_public_path__ + \"static/media/Cancelled.15c84b14.svg\";","module.exports = __webpack_public_path__ + \"static/media/Display.b96d92a3.svg\";","import React, { useState, useEffect, useRef } from 'react';\nimport './Navbar.css';\nimport { ChevronDown, ChevronUp } from 'react-feather';\nimport Display from '../Images/Display.svg';\n\nconst Navbar = ({ sortingOption, onSortingChange, groupingOption, onGroupingChange }) => {\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n  const dropdownRef = useRef(null);\n  const toggleDropdown = () => {\n    setDropdownOpen((prev) => !prev);\n  };\n\n  const handleClickOutside = (event) => {\n    if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n      setDropdownOpen(false);\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n     document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n\n  return (\n    <div className='nav-bar' ref={dropdownRef}>\n      <div className='drop-down' onClick={toggleDropdown}>\n        <img src={Display} className='icon' alt='Menu' />\n        <p className='bold'>Display</p>\n        {dropdownOpen ? <ChevronUp className='icon' /> : <ChevronDown className='icon' />}\n      </div>\n      {dropdownOpen && (\n        <div className='dropdown-options'>\n          <DropdownOption label='Grouping' value={groupingOption} onChange={onGroupingChange}>\n            <option value='status'>Status</option>\n            <option value='user'>User</option>\n            <option value='priority'>Priority</option>\n          </DropdownOption>\n          <DropdownOption label='Ordering' value={sortingOption} onChange={onSortingChange}>\n            <option value='priority'>Priority</option>\n            <option value='title'>Title</option>\n          </DropdownOption>\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst DropdownOption = ({ label, value, onChange, children }) => {\n  return (\n    <div className='dd-option'>\n      <label>{label}</label>\n      <select value={value} onChange={onChange}>\n        {children}\n      </select>\n    </div>\n  );\n};\n\nexport default Navbar;\n","import React from 'react';\nimport \"./Card.css\";\n\nimport Backlog from '../Images/Backlog.svg';\nimport Todo from '../Images/To-do.svg';\nimport Done from '../Images/Done.svg';\nimport InProgress from '../Images/in-progress.svg';\nimport Cancelled from '../Images/Cancelled.svg';\n\nimport Urgent from '../Images/SVG - Urgent Priority colour.svg';\nimport Nope from '../Images/No-priority.svg';\nimport Low from '../Images/Img - Low Priority.svg';\nimport Medium from '../Images/Img - Medium Priority.svg';\nimport High from '../Images/Img - High Priority.svg';\n\nconst Card = ( props ) => {\n    \n    const logoReference = {\n        \"Backlog\": <img src={Backlog} className='logo-pic' alt=\"Backlog\" />,\n        \"Todo\": <img src={Todo} className='logo-pic' alt=\"Todo\" />,\n        \"In progress\": <img src={InProgress} className='logo-pic' alt=\"In progress\" />,\n        \"Done\": <img src={Done} className='logo-pic' alt=\"Done\" />,\n        \"Cancelled\": <img src={Cancelled} className='logo-pic' alt=\"Cancelled\" />\n    };\n\n    const priorityIcon = {\n        0: <img src={Nope} className='priority-icon' alt=\"No Priority\" />,\n        1: <img src={Urgent} className='priority-icon' alt=\"Urgent\" />,\n        2: <img src={Low} className='priority-icon' alt=\"Low\" />,\n        3: <img src={Medium} className='priority-icon' alt=\"Medium\" />,\n        4: <img src={High} className='priority-icon' alt=\"High\" />,\n    };\n\n    const { ticket, users } = props;\n\n    const getUserById = (userId) => {\n        return users.find((user) => user.id === userId);\n    };\n\n    const getInitials = (name) => {\n        const nameParts = name.split(' ');\n        const firstName = nameParts[0];\n        const lastName = nameParts.length > 1 ? nameParts[1] : '';\n        const initials = `${firstName.charAt(0)}${lastName ? lastName.charAt(0) : ''}`;\n        return initials.toUpperCase();\n    };\n\n    const getRandomColor = () => {\n        const letters='0123456789ABCDEF';\n        let color='#';\n        for (let i=0;i<6;i++) {\n            color+=letters[Math.floor(Math.random()*7)];\n        }\n        return color;\n    };\n\n    const user = getUserById(ticket.userId);\n    const initials = user ? getInitials(user.name) : '';\n\n    return (\n        <div className='card'>\n            <div className='card-top'>\n                <p className='card-title'>{ticket.id}</p>\n                {props.groupBy !== 'user' && (\n                    <div\n                        className=\"user-pic\"\n                        style={{\n                            backgroundColor: getRandomColor()\n                        }}\n                    >\n                        {initials}\n                    </div>\n                )}\n            </div>\n            <div className='card-middle'>\n                {props.groupBy !== 'status' && logoReference[ticket.status]}\n                <p className='card-desc bold'>\n                    {ticket.title}\n                </p>\n            </div>\n            <div className='card-bottom'>\n                {props.groupBy !== 'priority' && (\n                    <div className='priority-box'>\n                        {priorityIcon[ticket.priority]}\n                    </div>\n                )}\n                <div className='feature-box'>\n                    <img\n                        src=\"https://cdn-icons-png.flaticon.com/128/5720/5720434.png\"\n                        className='feature-icon'\n                        alt='Feature Request'\n                    />\n                    <p>{ticket.tag[0]}</p>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Card;\n","import React from 'react';\nimport \"./Board.css\";\nimport { MoreHorizontal, Plus} from 'react-feather';\n\nimport Backlog from '../Images/Backlog.svg';\nimport Todo from '../Images/To-do.svg';\nimport Done from '../Images/Done.svg';\nimport Card from '../Card/Card';\nimport InProgress from '../Images/in-progress.svg';\nimport Cancelled from '../Images/Cancelled.svg';\n\nconst Board = ( props ) => {\n\n    const logoReference = {\n        \"Backlog\": <img src={Backlog} className='logo-pic' alt=\"Backlog\" />,\n        \"Todo\": <img src={Todo} className='logo-pic' alt=\"Todo\" />,\n        \"In progress\": <img src={InProgress} className='logo-pic' alt=\"In progress\" />,\n        \"Done\": <img src={Done} className='logo-pic' alt=\"Done\" />,\n        \"Cancelled\": <img src={Cancelled} className='logo-pic' alt=\"Cancelled\" />\n    };\n\n  return (\n    <div className='board'>\n        <div className='board-top'>\n            <div className='board-top-left'>\n                {props.groupingOption === \"status\" && logoReference[props.title]}\n                <p className='board-title bold'>{props.title}</p>\n                <span className='board-count'>{props.count}</span>\n            </div>\n            <div className='board-top-right'>\n                <MoreHorizontal className='icon'/>\n                <Plus className='icon'/>\n            </div>\n        </div>\n        <div className='card-container'>\n            {props.tickets.map((ticket) => (\n                <Card key={ticket.id} ticket={ticket} groupBy={props.groupingOption} users={props.users} />\n            ))}\n        </div>\n    </div>\n  );\n};\n\nexport default Board","import React, { useEffect, useState } from \"react\";\nimport './App.css';\nimport Urgent from \"./Components/Images/SVG - Urgent Priority colour.svg\";\nimport Nope from \"./Components/Images/No-priority.svg\";\nimport Low from \"./Components/Images/Img - Low Priority.svg\";\nimport Medium from \"./Components/Images/Img - Medium Priority.svg\";\nimport High from \"./Components/Images/Img - High Priority.svg\";\nimport Navbar from \"./Components/Navbar/Navbar\";\nimport Board from \"./Components/Board/Board\";\nimport axios from \"axios\"; \n\nfunction App() {\n  const initialGroupingOption = localStorage.getItem('groupBy') || \"status\";\n  const initialSortingOption = localStorage.getItem('sortBy') || \"priority\";\n\n  const [tickets, setTickets] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [groupingOption, setGroupingOption] = useState(initialGroupingOption);\n  const [sortingOption, setSortingOption] = useState(initialSortingOption);\n\n  const priorityLabels = {\n    0:(\n      <div className=\"user-label\">\n      <img src={Nope} className='user-pic' alt=\"No Priority\" />  No Priority\n      </div>\n    ),\n    2:(\n      <div className=\"user-label\">\n      <img src={Low} className='user-pic' alt=\"Low\" />  Low\n      </div>\n    ),\n    3:(\n      <div className=\"user-label\">\n      <img src={Medium} className='user-pic' alt=\"Medium\" />  Medium\n      </div>\n    ), \n    4:(\n      <div className=\"user-label\">\n      <img src={High}  className='user-pic' alt=\"High\" />  High\n      </div>\n    ),  \n    1:(\n      <div className=\"user-label\">\n      <img src={Urgent} className='user-pic' alt=\"Urgent\" />  Urgent\n      </div>\n    )\n  };\n\n  const userLabels=users.reduce((labels, user) => {\n    const nameParts=user.name.split(' ');\n    const firstName=nameParts[0];\n    const lastName=nameParts.length > 1 ? nameParts[1] : '';\n    const firstLetterFirstName = firstName.charAt(0).toUpperCase();\n    const firstLetterLastName = lastName.charAt(0).toUpperCase();\n\n    const randomColor = getRandomColor();\n\n    labels[user.id] = (\n      <div className=\"user-label\">\n        <div\n          className=\"user-pic\"\n          style={{\n            backgroundColor: randomColor,\n          }}\n        >\n          {firstLetterFirstName}\n          {lastName && ` ${firstLetterLastName}`}\n        </div>\n        {user.name}\n      </div>\n    );\n    return labels;\n  }, {});\n\n  function getRandomColor() {\n    const letters='0123456789ABCDEF';\n    let color='#';\n    for (let i=0;i<6;i++) {\n      color+=letters[Math.floor(Math.random()*7)];\n    }\n    return color;\n  }\n\n  useEffect(() => {\n    getDetails();\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('groupBy', groupingOption);\n    localStorage.setItem('sortBy',sortingOption);\n  }, [groupingOption, sortingOption])\n\n  async function getDetails() {\n    try {\n      const { data } = await axios.get(\"https://api.quicksell.co/v1/internal/frontend-assignment\");\n      const updatedTickets = data.tickets.map((ticket) => {\n        if (ticket.priority === 1) {\n          ticket.priority = 2;\n        } else if (ticket.priority === 2) {\n          ticket.priority = 3;\n        } else if (ticket.priority === 3) {\n          ticket.priority = 4;\n        } else if (ticket.priority === 4) {\n          ticket.priority = 1;\n        }\n        return ticket;\n      });\n      setTickets(updatedTickets); \n      setUsers(data.users);\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  }\n\n  const organizeTickets = () => {\n    const organizedData = {};\n  \n    if (groupingOption === 'status') {\n      const ticketStatus = {\n        \"Backlog\": [],\n        \"Todo\": [],\n        \"In progress\": [],\n        \"Done\": [],\n        \"Cancelled\": []\n      };\n  \n      tickets.forEach(ticket => {\n        if (ticketStatus[ticket.status]) {\n          ticketStatus[ticket.status].push(ticket);\n        }\n      });\n  \n      return ticketStatus;\n    } else if (groupingOption === 'priority') {\n      const priorityStatus = {\n        0: [],\n        1: [],\n        2: [],\n        3: [],\n        4: []\n      };\n  \n      tickets.forEach(ticket => {\n        if (priorityStatus[ticket.priority]) {\n          priorityStatus[ticket.priority].push(ticket);\n        }\n      });\n  \n      return priorityStatus;\n    } else if (groupingOption === 'user') {\n      const userStatus = {\n        \"usr-1\": [],\n        \"usr-2\": [],\n        \"usr-3\": [],\n        \"usr-4\": [],\n        \"usr-5\": []\n      };\n  \n      tickets.forEach(ticket => {\n        if (userStatus[ticket.userId]) {\n          userStatus[ticket.userId].push(ticket);\n        }\n      });\n  \n      return userStatus;\n    } \n  \n    return organizedData;\n  };\n\n  const sortByPriority = (tickets) => {\n    return [...tickets].sort((a, b) => b.priority - a.priority);\n  };\n\n  const sortByTitle = (tickets) => {\n    return [...tickets].sort((a, b) => a.title.localeCompare(b.title));\n  };\n\n  const handleSortingChange = (event) => {\n    setSortingOption(event.target.value);\n  };\n\n  const handleGroupingChange = (event) => {\n    setGroupingOption(event.target.value);\n  };\n\n  const sortedTickets = (tickets) => {\n    const sortingFunctions = {\n      priority: sortByPriority,\n      title: sortByTitle,\n    };\n  \n    const sortingFunction = sortingFunctions[sortingOption];\n  \n    if (sortingFunction) {\n      return sortingFunction(tickets);\n    }\n  \n    return tickets;\n  };\n\n  const boards = organizeTickets();\n\n  return (\n    <div className=\"app-container\">\n      <div className=\"app-navbar\">\n        <nav>\n          <Navbar\n            sortingOption={sortingOption}\n            onSortingChange={handleSortingChange}\n            groupingOption={groupingOption}\n            onGroupingChange={handleGroupingChange}\n          />\n        </nav>\n      </div>\n      <div className=\"app-outer-container\">\n        <div className=\"app-boards\">\n        {Object.keys(boards).map(boardKey => (\n            <Board \n              key={boardKey} \n              title={groupingOption === 'priority' ? priorityLabels[boardKey] : \n              groupingOption === \"user\" ? userLabels[boardKey] : boardKey}\n              count={boards[boardKey].length}\n              tickets={sortedTickets(boards[boardKey])}\n              sortingOption={sortingOption}\n              groupingOption={groupingOption} \n              users={users}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}